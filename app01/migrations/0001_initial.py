# Generated by Django 5.0.7 on 2024-07-29 02:52

import app01.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("name", models.CharField(max_length=100)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                ("name", models.CharField(max_length=100)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="PackagingType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("内盒", "Inner Box"),
                            ("外箱", "Outer Box"),
                            ("花器", "Flower Vessel"),
                        ],
                        max_length=100,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                ("name", models.CharField(max_length=100)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                ("name", models.CharField(max_length=100)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_id",
                    models.CharField(editable=False, max_length=100, unique=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("company_name", models.CharField(max_length=100)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("mobile", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "sales_channel",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "product_demand",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("已成交", "已成交"), ("跟进中", "跟进中")],
                        default="跟进中",
                        max_length=10,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B"), ("C", "C"), ("D", "D")],
                        default="A",
                        max_length=1,
                    ),
                ),
                (
                    "social_account",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("website_link", models.URLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="customer_images/"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FollowUpRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("follow_up_count", models.PositiveIntegerField()),
                ("follow_up_time", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField()),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follow_ups",
                        to="app01.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FollowUpAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to=app01.models.user_directory_path)),
                (
                    "follow_up_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="app01.followuprecord",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Packaging",
            fields=[
                (
                    "model",
                    models.CharField(
                        editable=False,
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=app01.models.packaging_directory_path,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "length",
                    models.FloatField(blank=True, help_text="长度，单位：cm", null=True),
                ),
                (
                    "width",
                    models.FloatField(blank=True, help_text="宽度，单位：cm", null=True),
                ),
                (
                    "height",
                    models.FloatField(blank=True, help_text="高度，单位：cm", null=True),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("remark", models.TextField(blank=True, default="无备注")),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "packaging_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app01.packagingtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlowerMaterial",
            fields=[
                (
                    "model",
                    models.CharField(
                        default="Material0000",
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to="images/"
                    ),
                ),
                (
                    "chinese_name",
                    models.CharField(blank=True, default="", max_length=200, null=True),
                ),
                (
                    "english_name",
                    models.CharField(blank=True, default="", max_length=200, null=True),
                ),
                (
                    "scientific_name",
                    models.CharField(blank=True, default="", max_length=200, null=True),
                ),
                (
                    "color",
                    models.CharField(blank=True, default="", max_length=200, null=True),
                ),
                (
                    "chineses_specifications",
                    models.CharField(
                        blank=True, default="无中文规格", max_length=200, null=True
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True, default="", help_text="单位：cm", max_length=200
                    ),
                ),
                (
                    "weight",
                    models.CharField(
                        blank=True, default="", help_text="单位：g", max_length=200
                    ),
                ),
                (
                    "sale_spec_quantity",
                    models.CharField(
                        blank=True, default="", help_text="销售规格的数字", max_length=200
                    ),
                ),
                (
                    "sale_spec_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pcs", "pcs"),
                            ("g", "g"),
                            ("box", "box"),
                            ("kg", "kg"),
                        ],
                        default="pcs",
                        help_text="销售规格的单位",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "outer_box_length",
                    models.FloatField(
                        blank=True, default=0.0, help_text="长度，单位：cm", null=True
                    ),
                ),
                (
                    "outer_box_width",
                    models.FloatField(
                        blank=True, default=0.0, help_text="宽度，单位：cm", null=True
                    ),
                ),
                (
                    "outer_box_height",
                    models.FloatField(
                        blank=True, default=0.0, help_text="高度，单位：cm", null=True
                    ),
                ),
                (
                    "packing_quantity",
                    models.IntegerField(
                        blank=True, default=0, help_text="单位：qty", null=True
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price_one",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price_two",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField()),
                (
                    "category",
                    models.ForeignKey(
                        default="默认类型",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app01.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app01.grade",
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app01.process",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app01.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "model",
                    models.CharField(
                        default="Product0000",
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=app01.models.product_directory_path,
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=app01.models.product_directory_path,
                    ),
                ),
                ("chinese_name", models.CharField(max_length=200)),
                ("english_name", models.CharField(max_length=200)),
                ("size", models.CharField(blank=True, default="0", max_length=200)),
                ("weight", models.CharField(blank=True, default="0", max_length=200)),
                ("color", models.CharField(blank=True, default="默认颜色", max_length=200)),
                (
                    "labor_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("loss_rate", models.FloatField(default=0.0)),
                (
                    "profit_margin",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "description",
                    models.CharField(blank=True, default="无备注", max_length=200),
                ),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.FloatField(default=1.0)),
                ("ratio", models.FloatField(default=1.0)),
                (
                    "flower_material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app01.flowermaterial",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.product"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="materials",
            field=models.ManyToManyField(
                through="app01.ProductMaterial", to="app01.flowermaterial"
            ),
        ),
        migrations.CreateModel(
            name="ProductPackaging",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "inner_box_quantity",
                    models.PositiveIntegerField(
                        blank=True, default=0, help_text="一个内箱能装多少个产品", null=True
                    ),
                ),
                (
                    "outer_box_quantity",
                    models.PositiveIntegerField(
                        blank=True, default=0, help_text="一个大外箱能装多少内箱", null=True
                    ),
                ),
                (
                    "packaging",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app01.packaging",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.product"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app01.producttype",
            ),
        ),
        migrations.CreateModel(
            name="Quote",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "shipper",
                    models.CharField(default="Summer Flora.Co.,Ltd.", max_length=255),
                ),
                ("buyer", models.CharField(max_length=255)),
                ("receiver", models.CharField(max_length=255)),
                ("tel", models.CharField(max_length=20)),
                ("invoice_no", models.CharField(max_length=50)),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("valid_date", models.DateField()),
                (
                    "freight_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "grand_total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("payment_term", models.CharField(default=" ", max_length=100)),
                ("deliver_time", models.CharField(default=" ", max_length=100)),
                ("payment_currency", models.CharField(default="USD", max_length=10)),
                (
                    "beneficiary_account_number",
                    models.CharField(default=" ", max_length=50),
                ),
                ("swift_code", models.CharField(default=" ", max_length=11)),
                ("beneficiary_country", models.CharField(default=" ", max_length=50)),
                (
                    "beneficiary_name",
                    models.CharField(
                        default="Yunnan Summer Flora Co., Ltd.", max_length=100
                    ),
                ),
                ("beneficiary_address", models.CharField(default=" ", max_length=255)),
                ("beneficiary_bank", models.CharField(default="", max_length=100)),
                (
                    "beneficiary_bank_address",
                    models.CharField(default=" ", max_length=255),
                ),
                ("bank_code", models.CharField(default=" ", max_length=10)),
                ("branch_code", models.CharField(default=" ", max_length=10)),
                ("remark", models.TextField(blank=True, default=" ")),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuoteItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=100)),
                (
                    "picture",
                    models.ImageField(blank=True, null=True, upload_to="quote_items/"),
                ),
                ("specification", models.CharField(max_length=200)),
                ("color", models.CharField(max_length=100)),
                ("qty", models.PositiveIntegerField(default=1)),
                ("cost_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "profit_margin",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "quote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="app01.quote",
                    ),
                ),
            ],
        ),
    ]
